// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource sqlite {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "sqlite"
}

generator client {
  provider = "prisma-client-js"
}

model Product {
  id                 String    @id @default(cuid())
  name               String    @default("")
  productDescription String    @default("")
  category           Category? @relation("Product_category", fields: [categoryId], references: [id])
  categoryId         String?   @map("category")
  productPrice       Int
  productImage       String?

  @@index([categoryId])
}

model User {
  id               String  @id @default(cuid())
  name             String  @default("")
  userEmail        String  @unique @default("")
  userPassword     String
  userPhone        String  @default("")
  userAddress      String  @default("")
  role             Role?   @relation("User_role", fields: [roleId], references: [id])
  roleId           String? @map("role")
  posts            Post[]  @relation("Post_author")
  from_Cart_ofUser Cart[]  @relation("Cart_ofUser")

  @@index([roleId])
}

model Category {
  id                    String    @id @default(cuid())
  name                  String    @default("")
  from_Product_category Product[] @relation("Product_category")
}

model Role {
  id                String  @id @default(cuid())
  name              String  @default("")
  canManageProducts Boolean @default(false)
  canManageUser     Boolean @default(false)
  canManagerPost    Boolean @default(false)
  assignedTo        User[]  @relation("User_role")
}

model Order {
  id        String    @id @default(cuid())
  quantity  Int?
  createdAt DateTime? @default(now())
}

model Cart {
  id        String    @id @default(cuid())
  ofUser    User?     @relation("Cart_ofUser", fields: [ofUserId], references: [id])
  ofUserId  String?   @map("ofUser")
  createdAt DateTime? @default(now())

  @@index([ofUserId])
}

model Invoice {
  id String @id @default(cuid())
}

model CartDetail {
  id String @id @default(cuid())
}

model Post {
  id       String  @id @default(cuid())
  title    String  @default("")
  content  String  @default("")
  link     String  @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  image    String?
  author   User?   @relation("Post_author", fields: [authorId], references: [id])
  authorId String? @map("author")

  @@index([authorId])
}
